<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Editor</title>

    <link rel="stylesheet" href="css/home.css">
    <link rel="stylesheet" href="css/editor.css">

</head>

<body>
<form id="imageForm" enctype="multipart/form-data">
    
    <div class="banner" id="banner">
         <input type="file" name="image" id="imageInput" style="display: none;" required>
    <label for="imageInput" id="imageLabel" class="banner-upload-btn">
        <img src="img/upload.png" alt="upload banner">
    </label>
   
   
   </div>
    
    <div class="blog">
        <textarea type="text" class="title" placeholder="Blog title..." id="title" required></textarea>
        <textarea type="text" class="article" placeholder="Start writing here..." id="text" required></textarea>
    </div>

    <div class="blog-options">
        <button class="btn dark publish-btn" type="submit">publish</button>
     </div>

</form>


    <div id="images"></div>

  
<style>

.loading-container {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right:0;
  bottom:0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 9999;
  align-items: center;
  justify-content: center;
}

.loading-spinner {
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-top: 4px solid #ffffff;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  animation: spin 1s linear infinite;
  position:absolute;
  top:50%;
  left:50%;
  transform:translate(-50%,-50%);
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}</style>



<!-- Add this div for the loading animation -->
<div id="loadingAnimation" class="loading-container">
  <div class="loading-spinner"></div>
</div>
 
   
   
   <script>
   
   
   
var loadingAnimation = document.getElementById("loadingAnimation");
const body = document.querySelector("body");
 
 
 document.getElementById('imageLabel').addEventListener('click', function (e) {
    e.preventDefault();
    document.getElementById('imageInput').click();
});


// Set the uploaded image as the background of the div
document.getElementById('imageInput').addEventListener('change', function () {
    const file = this.files[0];
    const reader = new FileReader();
    reader.onload = function (e) {
        document.getElementById('banner').style.backgroundImage = `url(${e.target.result})`;
    };
    reader.readAsDataURL(file);
});

  document.getElementById('imageForm').addEventListener('submit', async function (e) {
    e.preventDefault();
    const title = document.getElementById('title').value;
    const text = document.getElementById('text').value;

loadingAnimation.style.display = "block";

    const formData = new FormData();
    formData.append('title', title);
    formData.append('text', text);
    formData.append('image', document.querySelector('input[type="file"]').files[0]);

    try {
        const response = await fetch('https://lazy-cyan-jellyfish-garb.cyclic.app/upload', {
            method: 'POST',
            body: formData,
        });
        if (response.ok) {
			  loadingAnimation.style.display = "none";
	
            alert('Blog uploaded successfully');
            location.reload();
        } else {
            throw new Error('Failed to upload blog');
        }
    } catch (error) {
        console.error('Error uploading blog:', error);
		  loadingAnimation.style.display = "none";
	
    }
    location.reload();
});

</script>

<style>
.blogListWrap{
	margin-top:100vh;
	width:100%;
	display:flex;
	justify-content:center;
	align-items:center;
	max-width:800px;
	flex-wrap:wrap;
	margin-bottom:50px;
}
#blogList{
	display:flex;
	justify-content:center;
	align-items:center;
	
	
}
.blogBox{
	width:350px;
	height:400px;
	overflow:auto;
	border:1px solid black;
	margin:20px;
	padding-bottom:15px;
	text-align:center;
}
.blogBox img{
	width:300px;
	nargin-bottom:10px;
}
</style>
     <center>  <div class="blogListWrap">
	 
<h1 style="font-size:20px; font-weight:500;">Following blogs are being displayed. You can delete them respectively by clicking on delete button.</h1>
                        <div id="blogList"></div>
                        
                    </div>
    </center>

	
	
	
	
	
	
	
	
    
                 
       
<style>
button{
	padding:8px 20px;
	color:#fff;
	background:#000;
	cursor:pointer;
	margin-top:15px;
}
</style>

	<script>
async function fetchImages() {
  try {
    const response = await fetch('https://lazy-cyan-jellyfish-garb.cyclic.app/images');
    const data = await response.json();

    const imagesDiv = document.getElementById('blogList');

    data.forEach(image => {
      const blogBox = document.createElement('div');
      blogBox.className = 'blogBox';
      blogBox.innerHTML = `<img class="img-fluid" src="${image.url}" alt="">
                          <a>Web Design</a>
                          <small class="me-3">John Doe</small>
                          <small>01 Jan, 2045</small>
                          <h4 class="mb-3" style="margin-top:10px;">${image.title}</h4>
                          <center><div style="margin-top:10px; width:280px;">${image.text}</div></center>
                          <button class="deleteButton">Delete</button>`;

      const deleteButton = blogBox.querySelector('.deleteButton');
      deleteButton.addEventListener('click', async () => {
        const confirmDelete = confirm('Are you sure you want to delete this data?');

        if (confirmDelete) {
          try {
            const deleteResponse = await fetch(
              `https://lazy-cyan-jellyfish-garb.cyclic.app/blogtodelete/${image._id}`,
              {
                method: 'DELETE',
              }
            );
            if (deleteResponse.ok) {
              alert('Data deleted successfully');
              location.reload();
            } else {
              throw new Error('Error deleting Data');
            }
          } catch (error) {
            alert('Error deleting data');
            console.error(error);
          }
        } else {
          // User clicked "Cancel," do nothing
          return;
        }
      });

      imagesDiv.appendChild(blogBox);
    });
  } catch (error) {
    console.error('Error fetching images:', error);
  }
}


    fetchImages();
</script>



   
</body>
</html>